<?php
/**
 * I belong to Defination
 */

class  FieldDefine extends Defination {
    
    public function __construct() {
        parent::__construct();
    }
    
    /**
    * Will through exception is not unique name.
    *
    * @param string $name Unique name of the field
    * @param integer $_formTypeId its parent form type
    *
    * @return integer the field id
    */
   function create($name, $_formTypeId, $type, $category)
    {
        //check if this name exists
        $nameCount= $this->db->countRecords("field", "name = :name", array(":name" => $name));
        
       if($nameCount>0)
       {
           throw new Exception("The field name id not unique");
       }
       
       //insert the field
       $this->db->insert("field", array(
           "name" => $name,
           "type" => $type,
           "category" => $category,
           "_formTypeId"=> $_formTypeId
       ));
       
       return $this->db->lastInsertId();
    }
    
    
    
    /**
    * @param string $name string or number
    *
    * @return void
    */
    function delete($name)
    {
        if(is_numeric($name)){
            $this->db->delete("field", array("id" => $name));
        }
        else{
            $this->db->delete("field", array("name" => $name));
        }
    }

}
